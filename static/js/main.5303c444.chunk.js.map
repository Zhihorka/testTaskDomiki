{"version":3,"sources":["Auth.tsx","BuildingsList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","container","display","flexWrap","width","margin","spacing","loginBtn","marginTop","flexGrow","header","textAlign","background","color","card","initialState","username","password","isButtonDisabled","helperText","isError","reducer","state","action","type","payload","Login","classes","useReducer","dispatch","useEffect","trim","handleLogin","axios","post","then","response","console","log","error","handleKeyPress","event","keyCode","which","className","noValidate","autoComplete","Card","CardHeader","title","CardContent","TextField","fullWidth","id","label","placeholder","onChange","target","value","onKeyPress","CardActions","Button","variant","size","onClick","disabled","BuildingList","a","get","headers","res","persons","data","fetchPosts","listItems","map","number","App","Auth","BuildingsList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5303c444.chunk.js","sourcesContent":["import React, { useReducer, useEffect} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      width: 400,\r\n      margin: `${theme.spacing(0)} auto`\r\n    },\r\n    loginBtn: {\r\n      marginTop: theme.spacing(2),\r\n      flexGrow: 1\r\n    },\r\n    header: {\r\n      textAlign: 'center',\r\n      background: '#2a94f0',\r\n      color: '#fff'\r\n    },\r\n    card: {\r\n      marginTop: theme.spacing(10)\r\n    }\r\n  })\r\n);\r\n\r\n//state type\r\n\r\n\r\n\r\n\r\ntype State = {\r\n  username: string\r\n  password:  string\r\n  isButtonDisabled: boolean\r\n  helperText: string\r\n  isError: boolean\r\n};\r\n\r\nconst initialState:State = {\r\n  username: '',\r\n  password: '',\r\n  isButtonDisabled: true,\r\n  helperText: '',\r\n  isError: false\r\n};\r\n\r\ntype Action = { type: 'setUsername', payload: string }\r\n  | { type: 'setPassword', payload: string }\r\n  | { type: 'setIsButtonDisabled', payload: boolean }\r\n  | { type: 'loginSuccess', payload: string }\r\n  | { type: 'loginFailed', payload: string }\r\n  | { type: 'setIsError', payload: boolean };\r\n\r\nconst reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case 'setUsername': \r\n      return {\r\n        ...state,\r\n        username: action.payload\r\n      };\r\n    case 'setPassword': \r\n      return {\r\n        ...state,\r\n        password: action.payload\r\n      };\r\n    case 'setIsButtonDisabled': \r\n      return {\r\n        ...state,\r\n        isButtonDisabled: action.payload\r\n      };\r\n    case 'loginSuccess': \r\n      return {\r\n        ...state,\r\n        helperText: action.payload,\r\n        isError: false\r\n      };\r\n    case 'loginFailed': \r\n      return {\r\n        ...state,\r\n        helperText: action.payload,\r\n        isError: true\r\n      };\r\n    case 'setIsError': \r\n      return {\r\n        ...state,\r\n        isError: action.payload\r\n      };\r\n  }\r\n}\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n\r\n  useEffect(() => {\r\n    if (state.username.trim() && state.password.trim()) {\r\n     dispatch({\r\n       type: 'setIsButtonDisabled',\r\n       payload: false\r\n     });\r\n    } else {\r\n      dispatch({\r\n        type: 'setIsButtonDisabled',\r\n        payload: true\r\n      });\r\n    }\r\n  }, [state.username, state.password]);\r\n\r\n\r\n\r\n\r\n  const handleLogin = () => {\r\n    axios.post('http://test-alpha.reestrdoma.ru/api/login/', {\r\n      username: state.username,\r\n      password: state.password\r\n    })\r\n    .then((response) => {\r\n      console.log('Все получилось');\r\n      console.log(response);\r\n    }, (error) => {\r\n      console.log('Ничего не получилось');\r\n      console.log(error);\r\n    });\r\n\r\n    if (state.username === 'abc@email.com' && state.password === 'password') {\r\n      dispatch({\r\n        type: 'loginSuccess',\r\n        payload: 'Login Successfully'\r\n      });\r\n    } else {\r\n      console.log(state.username+ ' ' + state.password );\r\n      dispatch({\r\n        type: 'loginFailed',\r\n        payload: 'Incorrect username or password'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event: React.KeyboardEvent) => {\r\n    if (event.keyCode === 13 || event.which === 13) {\r\n      state.isButtonDisabled || handleLogin();\r\n    }\r\n  };\r\n\r\n  const handleUsernameChange: React.ChangeEventHandler<HTMLInputElement> =\r\n    (event) => {\r\n      dispatch({\r\n        type: 'setUsername',\r\n        payload: event.target.value\r\n      });\r\n    };\r\n\r\n  const handlePasswordChange: React.ChangeEventHandler<HTMLInputElement> =\r\n    (event) => {\r\n      dispatch({\r\n        type: 'setPassword',\r\n        payload: event.target.value\r\n      });\r\n    }\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <Card className={classes.card}>\r\n        <CardHeader className={classes.header} title=\"🏘 Реестр Дома\" />\r\n        <CardContent>\r\n          <div>\r\n            <TextField\r\n              error={state.isError}\r\n              fullWidth\r\n              id=\"username\"\r\n              type=\"email\"\r\n              label=\"Логин\"\r\n              placeholder=\"Логин\"\r\n              margin=\"normal\"\r\n              onChange={handleUsernameChange}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n            <TextField\r\n              error={state.isError}\r\n              fullWidth\r\n              id=\"password\"\r\n              type=\"password\"\r\n              label=\"Пароль\"\r\n              placeholder=\"Пароль\"\r\n              margin=\"normal\"\r\n              helperText={state.helperText}\r\n              onChange={handlePasswordChange}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n          </div>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"secondary\"\r\n            className={classes.loginBtn}\r\n            onClick={handleLogin}\r\n            disabled={state.isButtonDisabled}>\r\n            Войти\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;","import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst BuildingList = ()=>{\r\n    const numbers = [1, 2, 3, 4, 5];\r\n    const login = ''\r\n    const password = ''\r\n\r\n    useEffect(() => {\r\n    const fetchPosts = async () => {\r\n        console.log('начинаем запрос');\r\n        axios.get(`http://test-alpha.reestrdoma.ru/api/login/`,\r\n        {\r\n            headers: { \r\n                'username': 'xxx@xxxx.ru',\r\n                'password': 'xxxxx',\r\n                'Access-Control-Allow-Origin': '*'\r\n                }\r\n        }\r\n        )\r\n        .then(res => {\r\n          const persons = res.data;\r\n          console.log(persons);\r\n          console.log('запрос сделан');\r\n        })\r\n    }\r\n    fetchPosts();\r\n    },[]);\r\n\r\n    const listItems = numbers.map((number) =>\r\n      <li>{number}</li>\r\n    );\r\n    return (\r\n      <ul>{listItems}</ul>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default BuildingList;\r\n  \r\n\r\n","import React from 'react';\nimport './App.css';\nimport Auth from './Auth';\nimport BuildingsList from './BuildingsList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className = \"LoginForm\">\n        <Auth/>\n      </div>\n      <div className = \"BuildingsList\">\n        <BuildingsList/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}